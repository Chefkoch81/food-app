name: "catalog-api static analysis with sonarcloud"

trigger: none
pr: 
  paths:
    include:
    - apps/catalog-api/*

variables:
  dotnetSdkVersion: "6.x"
  buildConfiguration: "Release"
  folder: apps/catalog-api/api/
  testfolder: apps/catalog-api/api-tests/
  con: scSonarCloud

pool:
  vmImage: "ubuntu-20.04"

steps:
  - task: UseDotNet@2
    displayName: "Use .NET Core SDK $(dotnetSdkVersion)"
    inputs:
      version: "$(dotnetSdkVersion)"
  
  - task: NuGetToolInstaller@0
    displayName: 'Use NuGet 4.4.1'
    inputs:
      versionSpec: 4.4.1

  - task: DotNetCoreCLI@2
    displayName: "Restore project dependencies"
    inputs:
      command: "restore"
      projects: "**/*.csproj"

  - task: SonarCloudPrepare@1
    displayName: 'Prepare analysis configuration'
    inputs:
      SonarCloud: $(con)
      organization: 'integrations-training'
      scannerMode: 'MSBuild'
      projectKey: 'integrations-training'
      projectName: 'az-400'

  # - task: SonarCloudPrepare@1
  #   displayName: "Prepare SonarCloud analysis"
  #   inputs:
  #     SonarCloud: "$(con)"
  #     organization: "$(SonarOrganization)"
  #     scannerMode: "MSBuild"
  #     projectKey: "$(SonarProjectKey)"
  #     projectName: "$(SonarProjectName)"
  #     projectVersion: "$(Build.BuildNumber)"
  #     extraProperties: |
  #       sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/TestResults/Coverage/coverage.opencover.xml
  #       sonar.exclusions=**/wwwroot/lib/**/*

  - task: DotNetCoreCLI@2
    displayName: "Build the project - $(buildConfiguration)"
    inputs:
      command: "build"
      arguments: "--no-restore --configuration $(buildConfiguration)"
      projects: "$(folder)/*.csproj"

  - task: DotNetCoreCLI@2
    displayName: "Install ReportGenerator"
    inputs:
      command: custom
      custom: tool
      arguments: "install --global dotnet-reportgenerator-globaltool"

  - task: DotNetCoreCLI@2
    displayName: "Run unit tests - $(buildConfiguration)"
    inputs:
      command: "test"
      arguments: '--no-build --configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat="cobertura%2copencover" /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/'
      publishTestResults: true
      projects: "testfolder/*.csproj"

  - task: CmdLine@2
    inputs:
      script: 'dir'

  - script: |
      reportgenerator -reports:$(Build.SourcesDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:HtmlInline_AzurePipelines
    displayName: "Create code coverage report"

  - task: SonarCloudAnalyze@1
    displayName: "Run SonarCloud code analysis"

  - task: SonarCloudPublish@1
    displayName: "Publish SonarCloud quality gate results"

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)"
      ArtifactName: "drop"
      publishLocation: "Container"