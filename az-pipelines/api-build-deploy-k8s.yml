name: Kubernetes Deploy

pool:
  vmImage: "ubuntu-20.04"
  # name: aci-pool

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - FoodApi/*

variables:
  System.Debug: true
  fld: FoodUI/
  conACR: acrDefault
  conKube: conKube
  img: foodapi
  yml: /home/vsts/work/1/s/az-manifests/foodapi.yaml
  acr: integrationsonline.azurecr.io
  tag: $(Build.BuildId)
  ns: staging
  imagePullSecret: secret

stages:
  - stage: "Prepare"
    displayName: "Build Api Image"
    jobs:
      - job: "Build"
        steps:
          - task: Docker@2
            displayName: Login to ACR
            inputs:
              command: login
              containerRegistry: $(conACR)

          - task: Docker@2
            displayName: Build and Push
            inputs:
              repository: $(img)
              command: buildAndPush
              Dockerfile: FoodApi/dockerfile
          - task: Docker@2
            displayName: Logout of ACR
            inputs:
              command: logout
              containerRegistry: $(conACR)
          - publish: "$(Build.SourcesDirectory)/manifests"
            artifact: manifests

  - stage: Deploy
    displayName: Deploy stage

    jobs:
      - deployment: Deploy
        displayName: Deploy Job
        environment: "foodapp.staging"
        strategy:
          runOnce:
            deploy:
              steps:
                - task: KubernetesManifest@0
                  displayName: Create imagePullSecret
                  inputs:
                    action: createSecret
                    secretName: $(imagePullSecret)
                    kubernetesServiceConnection: $(conKube)
                    dockerRegistryEndpoint: $(conACR)
                    namespace: $(ns)
                
                - checkout: self

                - bash: |
                    cd /home/vsts/work/1/s
                    ls

                - task: KubernetesManifest@0
                  displayName: Deploy to Kubernetes cluster
                  inputs:
                    kubernetesServiceConnection: $(conKube)
                    action: "deploy"
                    manifests: $(yml)
                    imagePullSecrets: $(imagePullSecret)
                    containers: "$(acr)/$(img):$(tag)"
